# Git branch details, colors and bash prompt based on bashstrap (https://github.com/barryclark/bashstrap).
# Modified version of @gf3’s Sexy Bash Prompt
# (https://github.com/gf3/dotfiles)
if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		MAGENTA_NEW=$(tput setaf 9)
		ORANGE_NEW=$(tput setaf 172)
		GREEN_NEW=$(tput setaf 002)
		PURPLE_NEW=$(tput setaf 141)
	else
		MAGENTA_NEW=$(tput setaf 5)
		ORANGE_NEW=$(tput setaf 4)
		GREEN_NEW=$(tput setaf 2)
		PURPLE_NEW=$(tput setaf 1)
	fi
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	MAGENTA_NEW="\033[1;31m"
	ORANGE_NEW="\033[1;33m"
	GREEN_NEW="\033[1;32m"
	PURPLE_NEW="\033[1;35m"
	BOLD=""
	RESET="\033[m"
fi

export MAGENTA_NEW
export ORANGE_NEW
export GREEN_NEW
export PURPLE_NEW
export BOLD
export RESET

# Git branch details
function parse_git_dirty() {
	[[ $(git status 2> /dev/null | tail -n1) != *"working tree clean"* ]] && echo "*"
}
function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

# Bash prompts
export PS1="\n${BOLD}\[${MAGENTA_NEW}\]\u \[$RESET\]in ${BOLD}\[$GREEN_NEW\]\w\[$RESET\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")${BOLD}\[$PURPLE_NEW\]\$(parse_git_branch)\[$RESET\]\n$ \[$RESET\]"
export PS2="\[$ORANGE_NEW\]→ \[$RESET\]"
